import React, { useState } from "react";
import styled from "styled-components";
import {
  ComposedChart,
  Line,
  Bar,
  XAxis,
  YAxis,
  CartesianGrid,
  Tooltip,
  Legend,
  ResponsiveContainer,
  Area,
  Cell,
  BarChart,
} from "recharts";

import ReactWordcloud from "react-wordcloud";

export default function UserTab() {
  const [activeIndex, setActiveIndex] = useState(0);
  const tabClickHandler = (index) => {
    setActiveIndex(index);
  };

  const tabContArr = [
    {
      index: 0,
      tabTitle: " Îß§Ï∂úÏï° Î≥ÄÌôî",
      tabCont: "üí∏ ÏõîÎ≥Ñ Îß§Ï∂úÏï°, ÏßÄÏ∂ú, Ïù¥Ïùµ",
    },
    {
      index: 1,
      tabTitle: "Îß§Ï∂úÎì±Í∏â Î≥ÄÌôî",
      tabCont: "üí∞ ÏõîÎ≥Ñ Îß§Ï∂úÎì±Í∏â Î≥ÄÌôî",
    },
    {
      index: 2,
      tabTitle: "Í≥†Í∞ùÎ¶¨Î∑∞",
      tabCont: "‚òÅÔ∏è Ïö∞Î¶¨ Í∞ÄÍ≤å Í≥†Í∞ù Î¶¨Î∑∞",
    },
  ];

  // userStatisticsContainer Ïä§ÌÉÄÏùºÎìú Ïª¥Ìè¨ÎÑåÌä∏
  const UserStatisticsContainer = styled.div`
    display: flex;
    justify-content: center;
    align-items: center;
    width: 90vw;
    height: 400px;
  `;

  // userStatisticsItem Ïä§ÌÉÄÏùºÎìú Ïª¥Ìè¨ÎÑåÌä∏
  const UserStatisticsItem = styled.div`
    width: 100%;
    height: 100%;
    margin: 1rem;
  `;

  const dummyData = [
    {
      date: "2023-04",
      Îß§Ï∂úÏï°: 6100000,
      ÏßÄÏ∂ú: 2900000,
      Îß§Ï∂úÎì±Í∏â: 2,
    },
    {
      date: "2023-05",
      Îß§Ï∂úÏï°: 7100000,
      ÏßÄÏ∂ú: 4200000,
      Îß§Ï∂úÎì±Í∏â: 3,
    },
    {
      date: "2023-06",
      Îß§Ï∂úÏï°: 6700000,
      ÏßÄÏ∂ú: 4300000,
      Îß§Ï∂úÎì±Í∏â: 3,
    },
    {
      date: "2023-07",
      Îß§Ï∂úÏï°: 5300000,
      ÏßÄÏ∂ú: 2900000,
      Îß§Ï∂úÎì±Í∏â: 4,
    },
    {
      date: "2023-08",
      Îß§Ï∂úÏï°: 4700000,
      ÏßÄÏ∂ú: 2600000,
      Îß§Ï∂úÎì±Í∏â: 3,
    },
    {
      date: "2023-09",
      Îß§Ï∂úÏï°: 7700000,
      ÏßÄÏ∂ú: 4300000,
      Îß§Ï∂úÎì±Í∏â: 2,
    },
  ];
  // "Ïù¥Ïùµ " Î≥ÄÏàò Ï∂îÍ∞ÄÌïòÏó¨ Í≥ÑÏÇ∞
  dummyData.forEach((item) => {
    item.Ïù¥Ïùµ = item.Îß§Ï∂úÏï° - item.ÏßÄÏ∂ú;
  });

  const words = [
    {
      text: "ÎåÄÌïôÏÉù",
      value: 80,
    },
    {
      text: "Í∞êÏûêÌÉï",
      value: 110,
    },
    {
      text: "ÎßõÏßë",
      value: 70,
    },
    {
      text: "ÌïôÍµêÍ∑ºÏ≤ò",
      value: 60,
    },
    {
      text: "Ï†ÄÎ†¥Ìïú",
      value: 40,
    },
    {
      text: "Î∞∞Îã¨",
      value: 65,
    },
    {
      text: "Í∞ÄÎä•",
      value: 65,
    },
    {
      text: "ÏïºÏô∏",
      value: 75,
    },
    {
      text: "24ÏãúÍ∞Ñ",
      value: 70,
    },
    {
      text: "Î∂ÑÏúÑÍ∏∞",
      value: 68,
    },
    {
      text: "Ìï¥Ïû•",
      value: 100,
    },
    {
      text: "ÏπúÏ†à",
      value: 72,
    },
    {
      text: "Ï£ºÏ∞®",
      value: 60,
    },
    {
      text: "ÏÜåÏ£º",
      value: 80,
    },
    {
      text: "3Ï∞®",
      value: 80,
    },
    {
      text: "ÏïºÏãù",
      value: 65,
    },
    {
      text: "ÌòºÎ∞•",
      value: 58,
    },
    {
      text: "Îß§Ïö¥ Í∞êÏûêÌÉï",
      value: 90,
    },
    {
      text: "ÍπîÎÅîÌïú",
      value: 76,
    },
    {
      text: "Í≥†Í∏∞ÌíçÎ∂Ä",
      value: 85,
    },
    {
      text: "3Ï∞®",
      value: 99,
    },
    {
      text: "ÎßõÏûàÎäî Íµ≠Î¨º",
      value: 92,
    },
    {
      text: "Ïã†ÏÑ†Ìïú Ïû¨Î£å",
      value: 78,
    },

    {
      text: "Í∞ÄÍ≤© Ïò§Î¶Ñ",
      value: 100,
    },
    {
      text: "ÎåÄÍ∑úÎ™®",
      value: 82,
    },
    {
      text: "Ï∫êÏπòÌÖåÏù¥Î∏î",
      value: 82,
    },
    {
      text: "ÏàúÎåÄÍµ≠",
      value: 88,
    },
    {
      text: "Ïõ®Ïù¥ÌåÖ",
      value: 88,
    },
    {
      text: "ÎßõÏûàÎäî Î∞•",
      value: 85,
    },

    {
      text: "Ìë∏ÏßêÌïú Ïñë",
      value: 90,
    },
    {
      text: "ÎπÑÏã∏Îã§",
      value: 120,
    },
  ];
  const colors = ["#0088FE", "#00C49F", "#FFBB28", "#FF8042", "red", "pink"];

  const getPath = (x, y, width, height) => {
    return `M${x},${y + height}C${x + width / 3},${y + height} ${
      x + width / 2
    },${y + height / 3}
    ${x + width / 2}, ${y}
    C${x + width / 2},${y + height / 3} ${x + (2 * width) / 3},${y + height} ${
      x + width
    }, ${y + height}
    Z`;
  };
  const TriangleBar = (props) => {
    const { fill, x, y, width, height } = props;

    return <path d={getPath(x, y, width, height)} stroke="none" fill={fill} />;
  };
  return (
    <div>
      <TabSetting>
        <TabList>
          {tabContArr.map((section, index) => {
            return (
              <TabItem
                key={index}
                isActive={index === activeIndex}
                onClick={() => tabClickHandler(index)}
              >
                {section.tabTitle}
              </TabItem>
            );
          })}
          <ClickSlideWrapper>
            <ClickSlide activeIndex={activeIndex}></ClickSlide>
          </ClickSlideWrapper>
        </TabList>

        <h2>{tabContArr[activeIndex].tabCont}</h2>
        <div>
          {activeIndex === 0 && (
            <UserStatisticsContainer>
              <UserStatisticsItem>
                <ResponsiveContainer width="100%" height="100%">
                  <ComposedChart
                    width={400}
                    height={400}
                    data={dummyData}
                    margin={{
                      top: 20,
                      right: 20,
                      bottom: 20,
                      left: 20,
                    }}
                  >
                    <CartesianGrid stroke="#f5f5f5" />
                    <XAxis dataKey="date" scale="band" />
                    <YAxis />
                    <Tooltip />
                    <Legend />
                    <Area
                      type="monotone"
                      dataKey="Îß§Ï∂úÏï°"
                      fill="#8884d8"
                      stroke="#8884d8"
                    />
                    <Line type="monotone" dataKey="ÏßÄÏ∂ú" stroke="blue" />
                    <Bar dataKey="Ïù¥Ïùµ" barSize={20} fill="#1450A3" />
                  </ComposedChart>
                </ResponsiveContainer>
              </UserStatisticsItem>
            </UserStatisticsContainer>
          )}
          {activeIndex === 1 && (
            <UserStatisticsContainer>
              <UserStatisticsItem>
                <ResponsiveContainer width="100%" height="100%">
                  <BarChart
                    width={400}
                    height={400}
                    data={dummyData}
                    margin={{
                      top: 20,
                      right: 30,
                      left: 20,
                      bottom: 5,
                    }}
                  >
                    <CartesianGrid strokeDasharray="3 3" />
                    <XAxis dataKey="date" />
                    <YAxis />
                    <Bar
                      dataKey="Îß§Ï∂úÎì±Í∏â"
                      fill="#8884d8"
                      shape={<TriangleBar />}
                      label={{ position: "top" }}
                    >
                      {dummyData.map((entry, index) => (
                        <Cell key={`cell-${index}`} fill={colors[index % 20]} />
                      ))}
                    </Bar>
                  </BarChart>
                </ResponsiveContainer>
              </UserStatisticsItem>
            </UserStatisticsContainer>
          )}
          {activeIndex === 2 && (
            // ÌèêÏóÖÏ†ïÎ≥¥Ïóê ÎåÄÌïú Î¶¨Ïï°Ìä∏ Ï∞®Ìä∏Î•º Î†åÎçîÎßÅÌïòÎäî ÏΩîÎìú
            <div>
              <UserStatisticsContainer>
                <UserStatisticsItem>
                  <ResponsiveContainer width="100%" height="100%">
                    <ReactWordcloud words={words} />
                  </ResponsiveContainer>
                </UserStatisticsItem>
              </UserStatisticsContainer>
            </div>
          )}
        </div>
      </TabSetting>
    </div>
  );
}

const TabSetting = styled.div`
  text-align: center;
  /* padding: 0 40px 40px 40px;
  margin: 40px 30% 40px 30%; */
  width: 90vw;
  /* height: 70%; */
  /* height: 60vh; */
  border: 1px solid #a5acb1;
  border-radius: 5px;
  background: #fff;
  margin: 1rem;
`;

const TabList = styled.ul`
  display: flex;
  justify-content: center;
  align-items: center;
  display: flex;
  position: relative;
  list-style: none;
  padding: 0;
  margin: 0 0 30px 0;
`;

const TabItem = styled.p`
  flex: 1;
  padding: 12px 0 0 0;
  text-align: center;
  cursor: pointer;
  transition: opacity 180ms ease-out;
  outline: 0;
  font-weight: var(--bold-900);
  color: ${(props) =>
    props.isActive ? "var(--black)" : "var(--grey-lighter)"};
`;

const ClickSlideWrapper = styled.div`
  width: 100%;
  height: 2px;
  background: var(--grey-light);
  position: absolute;
  bottom: 0px;
  left: 0px;
`;

const ClickSlide = styled.div`
  width: 33%;
  position: relative;
  bottom: 0;
  height: 2px;
  background-color: var(--green-mint);
  left: ${(props) => props.activeIndex * 33}%;
  transition: 800ms cubic-bezier(0.23, 1, 0.32, 1);
  z-index: 2;
`;
